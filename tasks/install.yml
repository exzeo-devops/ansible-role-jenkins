---
- name: install | Ensure dependencies are installed.
  ansible.builtin.apt:
    name:
      - curl
      - apt-transport-https
      - gnupg
    state: present
  register: get_result
  until: get_result is success
  retries: 3
  delay: 2

- name: install | Add Jenkins apt repository key.
  ansible.builtin.get_url:
    url: "{{ jenkins_repo_key_url }}"
    dest: /etc/apt/trusted.gpg.d/jenkins.asc
    mode: "0644"
    force: true
  register: get_result
  until: get_result is success
  retries: 3
  delay: 2

- name: install | Add Jenkins apt repository.
  ansible.builtin.apt_repository:
    repo: "{{ jenkins_repo_url }}"
    state: present
    update_cache: true
  when: jenkins_repo_url | default(false)
  register: get_result
  until: get_result is success
  retries: 3
  delay: 2
  tags: ["skip_ansible_lint"]

- name: install | Download specific Jenkins version.
  ansible.builtin.get_url:
    url: "{{ jenkins_pkg_url }}/jenkins_{{ jenkins_version }}_all.deb"
    dest: "/tmp/jenkins_{{ jenkins_version }}_all.deb"
    mode: "0600"
  register: get_result
  until: get_result is success
  retries: 3
  delay: 2
  when: jenkins_version is defined

- name: install | Check if we downloaded a specific version of Jenkins.
  ansible.builtin.stat:
    path: "/tmp/jenkins_{{ jenkins_version }}_all.deb"
  register: specific_version
  when: jenkins_version is defined

- name: install | Install our specific version of Jenkins.
  ansible.builtin.apt:
    deb: "/tmp/jenkins_{{ jenkins_version }}_all.deb"
    state: present
  when: jenkins_version is defined and specific_version.stat.exists
  notify: Configure default users

- name: install | Ensure Jenkins is installed.
  ansible.builtin.apt:
    name: jenkins
    state: "{{ jenkins_package_state }}"
  notify: Configure default users

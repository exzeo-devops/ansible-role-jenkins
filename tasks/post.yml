---
- name: post | Ensure Jenkins service is started and enabled at boot
  ansible.builtin.service:
    name: jenkins
    state: started
    enabled: yes

- name: post | Wait for Jenkins to be fully operational
  ansible.builtin.uri:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/cli/"
    method: GET
    return_content: "yes"
    timeout: 5
    body_format: raw
    follow_redirects: "no"
    status_code: 200,403
  register: result
  until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false
  check_mode: false

- name: post | Download jenkins-cli jarfile from Jenkins server
  ansible.builtin.get_url:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_jar_location }}"
    mode: "0600"
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or '304' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 10
  check_mode: false

- name: post | Remove Jenkins security initialization scripts after first startup
  ansible.builtin.file:
    path: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
    state: absent
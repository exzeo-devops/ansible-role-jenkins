---
# jenkins_plugin module doesn't support password files.
- name: plugins | Retrieve Jenkins admin password from file
  ansible.builtin.slurp:
    src: "{{ jenkins_admin_password_file }}"
  register: adminpasswordfile
  no_log: true
  when: jenkins_admin_password_file | default(false)

- name: plugins | Set Jenkins admin password fact
  ansible.builtin.set_fact:
    jenkins_admin_password: "{{ adminpasswordfile['stdout'] | default(jenkins_admin_password) }}"
  no_log: true

- name: plugins | Create Jenkins updates directory
  ansible.builtin.file:
    path: "{{ jenkins_home }}/updates"
    state: directory
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
    mode: "0600"

- name: plugins | Download current plugin updates from Jenkins update site
  ansible.builtin.get_url:
    url: "{{ jenkins_updates_url }}/update-center.json"
    dest: "{{ jenkins_home }}/updates/default.json"
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
    mode: "0600"
  changed_when: false
  register: get_result
  until: get_result is success
  retries: 3
  delay: 2

- name: plugins | Remove first and last line from JSON file
  ansible.builtin.replace:
    path: "{{ jenkins_home }}/updates/default.json"
    regexp: "1d;$d"

- name: plugins | Install Jenkins plugins using admin credentials
  community.general.jenkins_plugin:
    name: "{{ item.name | default(item) }}"
    version: "{{ item.version | default(omit) }}"
    jenkins_home: "{{ jenkins_home }}"
    url_username: "{{ jenkins_admin_username }}"
    url_password: "{{ jenkins_admin_password }}"
    state: "{{ 'present' if item.version is defined else jenkins_plugins_state }}"
    timeout: "{{ jenkins_plugin_timeout }}"
    updates_expiration: "{{ jenkins_plugin_updates_expiration }}"
    updates_url: "{{ jenkins_updates_url }}"
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
    with_dependencies: "{{ jenkins_plugins_install_dependencies }}"
  with_items: "{{ jenkins_plugins }}"
  when: jenkins_admin_password | default(false)
  notify: Restart jenkins
  register: plugin_result
  until: plugin_result is success
  retries: 3
  delay: 2
